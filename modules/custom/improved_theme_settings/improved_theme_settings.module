<?php

/**
 * @file
 * Improved theme settings module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Utility\Xss;
use Drupal\Core\Render\Markup;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function improved_theme_settings_form_system_theme_settings_alter(&$form, FormStateInterface $form_state, $form_id) {

  $form['logo']['default_logo']['#description'] = t('This logo is shown in the platform header and on emails sent to your users. It can be overriden in the above E-mail setting');

  // If user has the improved settings, we don't alter nothing.
  if (\Drupal::currentUser()->hasPermission('administer improved theme settings')) {
    return;
  }

  // Our form contains all the correct id's so we can start the alteration.
  if (!empty($form['open_social_settings']) && !empty($form['os_color_settings']) && !empty($form['color'])) {
    // Unset theme updates.
    $form['update']['#access'] = FALSE;

    // Unset Bootstrap settings, we don't need it.
    $form['bootstrap']['#access'] = FALSE;

    // Unset all the settings that are part of the bootstrap group.
    foreach ($form as $setting => $settings) {
      if (!empty($settings['#group']) && $settings['#group'] == "bootstrap") {
        $form[$setting]['#access'] = FALSE;
      }
    }

    // We want color to be rendered under open social settings in a tab.
    $form['color']['#group'] = "open_social_settings";
  }
}

/**
 * Function that returns the updated color palette colors for in the <head>.
 *
 * @param string $colors
 *   Colors from the active theme.
 * @param string $system_theme_settings
 *   Active theme.
 *
 * @return string
 *   Updated CSS.
 */
function _improved_theme_settings_update_palette($colors = '', $system_theme_settings = 'socialblue') {

  if (empty($colors)) {
    $colors = color_get_palette($system_theme_settings);
  }

  $primary = $colors['brand-bg-primary'];
  $secondary = $colors['brand-bg-secondary'];
  $accent = $colors['brand-bg-accent'];
  $link = $colors['brand-text-primary'];

  $css = "
    [type=\"radio\"]:checked + label:before {
      border-color: $secondary !important;
    }

    [type=\"radio\"]:checked + label:after {
      border-color: $secondary !important;
      background-color: $secondary !important;
    }

    [type=\"radio\"]:checked + label {
      color: $secondary !important;
    }

    .dropdown-toggle.btn-primary:hover {
      background-color: $primary !important;
      border-color: $primary !important;
    }

    .nav-tabs:not(.brand-secondary) > li.active > a, .nav-tabs:not(.brand-secondary) .nav-tabs > li.active > a:hover, .nav-tabs:not(.brand-secondary) .nav-tabs > li.active > a:focus, .card__link {
      color: $link !important;
    }

    .nav-tabs:not(.brand-secondary) > li.active > a, .nav-tabs:not(.brand-secondary) > li.active > a:hover, .nav-tabs:not(.brand-secondary) > li.active > a:focus {
      border-right-color: $primary !important;
    }

    .nav-tabs.brand-primary a:hover, .nav-tabs.brand-primary a:focus, .brand-primary > .nav-tabs a:hover, .brand-primary > .nav-tabs a:focus, .nav-tabs.brand-secondary a:hover, .nav-tabs.brand-secondary a:focus, .brand-secondary > .nav-tabs a:hover, .brand-secondary > .nav-tabs a:focus {
      border-bottom-color: transparent !important;
    }

    .read-indicator,
    .navbar-default .navbar-nav > li > a:hover,
    .navbar-default .navbar-nav > li > a:focus,
    .navbar-default .navbar-brand:hover,
    .navbar-default .navbar-brand:focus,
    .navbar-default .dropdown-menu > .active > a,
    .navbar-default .dropdown-menu > .active > a:hover,
    .navbar-default .dropdown-menu > .active > a:focus,
    .select2-container--social .select2-results__option--highlighted[aria-selected],
    .select2-container--social .select2-results__option[aria-selected=true],
    .pagination > .active > a,
    .pagination > .active > a:hover,
    .pagination > .active > a:focus,
    .pagination > .active > span,
    .pagination > .active > span:hover,
    .pagination > .active > span:focus {
      background-color: $primary !important;
    }

    @media (max-width: 959px) {
      .navbar-collapse .dropdown-menu li a:hover, .navbar-collapse .dropdown-menu li a:focus {
        background-color: $primary !important;
      }
    }

    @media(max-width: 900px) {
      .navbar-form[role='search'] .search-icon {
        fill: $primary !important;
      }
    }

    .hero-form[role='search'] .search-icon {
      fill: $primary !important;
    }

    .form-control:focus {
      border-color: $primary !important;
      border-bottom-color: $primary !important;
      box-shadow: 0 2px 0 0 $primary !important;
    }
    
    .select2-container--social.select2-container--focus .select2-selection, .select2-container--social.select2-container--open .select2-selection, .select2-container--social .select2-dropdown {
      border-color: $primary !important;
    }

    .brand-secondary {
      background-color: $secondary !important;
      border-color: $secondary !important;
    }
    
    .badge-secondary {
      background-color: $secondary !important;
    }
    
    .badge-accent {
      background-color: $accent !important;
    }

    .nav-tabs.brand-primary a:hover, .nav-tabs.brand-primary a:focus, .brand-primary > .nav-tabs a:hover, .brand-primary > .nav-tabs a:focus, .nav-tabs.brand-secondary a:hover, .nav-tabs.brand-secondary a:focus, .brand-secondary > .nav-tabs a:hover, .brand-secondary > .nav-tabs a:focus {
      background-color: rgba(0,0,0,0.5) !important;
    }

    .btn-primary {
      background-color: $primary !important;
      border-color: $primary !important;
    }
    
    .btn-accent {
      background-color: $accent !important;
      border-color: $accent !important;
    }

    .btn-flat,
    .btn-link,
    .btn-link:hover,
    .btn-flat:hover,
    .btn-link:focus,
    .btn-flat:focus,
    .card__link,
    .card__link:focus,
    .card__link:hover,
    .view--who-liked .views-field-view-user a,
    .comment__reply-btn,
    .body-text a,
    .body-text a:hover,
    .book-menu .list-item--active-trail > a {
      color: $link !important;
      fill: $link !important;
    }

    .list-item--active, .list-item--active:hover, .list-item--active:focus,
    .list-group-item.active, .list-group-item.active:hover, .list-group-item.active:focus,
    [type=\"checkbox\"]:checked + label:after {
      background-color: $secondary !important;
      border-color: $secondary !important;
    }

    .stream-icon-new {
      background-color: $secondary !important;
    }

    blockquote {
      border-left-color: $link !important;
    }

    .input-group .form-control:focus ~ .input-group-addon {
      border-color: $primary !important;
      box-shadow: 0 2px 0 0 $primary !important;
    }

    .navbar-default .dropdown-menu > .active > a,
    .navbar-default .dropdown-menu > .active > a:hover,
    .navbar-default .dropdown-menu > .active > a:focus,
    .site-footer,
    .cover {
      background-color: $primary !important;
    }

    .navbar-secondary {
      background-color: $secondary !important;
    }

    .navbar-scrollable:before {
      background: linear-gradient(90deg, $secondary, transparent) !important;
    }

    .navbar-scrollable:after {
      background: linear-gradient(-90deg, $secondary, transparent) !important;
    }
    
    .ui-datepicker-calendar > tbody > tr > td .ui-state-active {
      background-color: $secondary !important;
     }

  ";

  return $css;
}

/**
 * Implements hook_page_attachments().
 */
function improved_theme_settings_page_attachments(array &$page) {

  // Check for the current active theme.
  $active_theme = \Drupal::theme()->getActiveTheme()->getName();
  // Determine the admin theme from config.
  $config = \Drupal::config('system.theme');
  // If we're in the admin theme we need to add alibrary.
  if ($active_theme == $config->get('admin')) {
    $page['#attached']['library'][] = 'improved_theme_settings/color.admin';
  }

  // If socialblue is our default theme.
  $system_theme_settings = \Drupal::configFactory()->get('system.theme')->get('default');

  // We render our color & font settings in the head. Only if socialblue is
  // the default theme. And only if the current active theme is socialblue.
  // Otherwise we also render it on all admin pages.
  if (array_key_exists('socialbase', \Drupal::service('theme.manager')->getActiveTheme()->getBaseThemes())) {
    if ($active_theme == $system_theme_settings) {
      $style_to_add = '';
      if (\Drupal::moduleHandler()->moduleExists('social_font')) {
        // Render font value here.
        $style_to_add .= social_font_render();
      }

      $card_radius = Xss::filter(theme_get_setting('card_radius', $system_theme_settings));
      $form_control_radius = Xss::filter(theme_get_setting('form_control_radius', $system_theme_settings));
      $button_radius = Xss::filter(theme_get_setting('button_radius', $system_theme_settings));

      if (!empty($card_radius) || $card_radius == 0) {
        $style_to_add .= '
        .card,
        .card-radius,
        .hero-canvas {
          border-radius: ' . $card_radius . 'px !important;
        }
        
        .message__message-body {
          border-radius: ' . $card_radius / 2 . 'px !important;
        }

        .tabs-left .vertical-tabs-list {
          border-radius: ' . $card_radius . 'px 0 0 ' . $card_radius . 'px !important;
        }

        .teaser--stream:last-child,
        .card__block:last-child,
        .card__nested-section:last-child {
          border-bottom-left-radius: ' . $card_radius . 'px !important;
          border-bottom-right-radius: ' . $card_radius . 'px !important;
        }

        .teaser--stream:last-child .teaser__image {
          border-bottom-left-radius: ' . $card_radius . 'px !important;
        }
        
        .card__block:first-child {
          border-top-left-radius: ' . $card_radius . 'px !important;
          border-top-right-radius: ' . $card_radius . 'px !important;
        }
        
        @media (min-width: 600px) {
          .teaser__teaser-type {
            border-radius: 0 0 ' . $card_radius . 'px 0 !important;
          }
          
          .off-canvas-xs-only {
            border-radius: ' . $card_radius . 'px !important;
          }
        }

        ';
      }

      if (!empty($form_control_radius) || $form_control_radius == 0) {
        $style_to_add .= '
          .form-control-radius,
          .form-control {
            border-radius: ' . $form_control_radius . 'px !important;
          }
          
          .search-take-over .form-control {
            border-radius: 0 !important;
          }
          
          .input-group .form-control:first-child, .input-group-addon:first-child {
            border-bottom-right-radius: 0 !important;
            border-top-right-radius: 0 !important;
          }
          
          .input-group .form-control:last-child, .input-group-addon:last-child {
            border-bottom-left-radius: 0 !important;
            border-top-left-radius: 0 !important;
          }
        ';
      }

      if (!empty($button_radius) || $button_radius == 0) {
        $style_to_add .= '
          :not(.btn-group) > .btn {
            border-radius: ' . $button_radius . 'px !important;
          }
          
          .btn.btn-icon-toggle {
            border-radius: 50% !important;
          }

        ';
      }

      // Get the color palette saved for custom social blue.
      $colors = color_get_palette($system_theme_settings);
      $default = color_get_palette($system_theme_settings, TRUE);

      // Check if there are differences between socialblue default scheme and
      // the saved palette. If yes we render our extra's in the head too.
      if (count(array_diff($colors, $default)) > 0) {
        $style_to_add .= _improved_theme_settings_update_palette($colors, $system_theme_settings);
      }

      if (!empty($style_to_add)) {
        $page['#attached']['html_head'][] = [
          [
            '#type' => 'html_tag',
            '#tag' => 'style',
            '#value' => Markup::create($style_to_add),
          ],

          // A key, to make it possible to recognize this HTML element when
          // altering.
          'social_theme_preprocess',
        ];
      }
    }
  }
}
